x-shared-env: &shared-env
  DB_HOST: db
  DB_NAME: boardgameanalytics_db

services:
  web:
    build:
      dockerfile: ./docker/web.Dockerfile
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_USER: bga_user
      DB_PASSWORD_FILE: /run/secrets/bga_user_password
      <<: *shared-env
    secrets:
      - bga_user_password
    networks:
      - web_network
  db:
    image: "postgres:17"
    restart: always
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      PGUSER: postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - ./src/db/init:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    secrets:
      - postgres_password
      - bga_user_password
      - bga_pipeline_password
    networks:
      - web_network
  pipeline_job:
    build:
      dockerfile: ./docker/pipeline.Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      BGG_USERNAME: /run/secrets/bgg_username
      BGG_PASSWORD: /run/secrets/bgg_password
      DB_USER: bga_pipeline
      DB_PASSWORD_FILE: /run/secrets/bga_pipeline_password
      <<: *shared-env
    secrets:
      - bga_pipeline_password
      - bgg_username
      - bgg_password
    volumes:
      - data-lake:/data
    networks:
      - web_network

volumes:
  db-data:
    name: "postgres-data"
    driver: local
  data-lake:
    name: "pipeline-data-lake"
    driver: local

secrets:
  postgres_password:
    file: docker/secrets/postgres_password.txt
  bga_user_password:
    file: docker/secrets/bga_user_password.txt
  bga_pipeline_password:
    file: docker/secrets/bga_pipeline_password.txt
  bgg_username:
    file: docker/secrets/bgg_username.txt
  bgg_password:
    file: docker/secrets/bgg_password.txt

networks:
  web_network:
    driver: bridge